node after(n:int; E : bool; state_id:int ) returns ( Y : bool );
var count:int;
let
  	
  count = 0 -> if (pre state_id != state_id) then
				if E then 1 else 0
		else
		 if E then (pre count) + 1 else pre count;
  Y =  count >= n ;

tel


node chart(E : bool; id_1 :int;) returns ( out:int; Y,Y2:bool; );
 var id:int;
let
Y =  after(2,E, id_1); 
Y2 = after(3,E, id_1);
automaton a

  state Pointa:
	
	unless ((id_1=1) and E and  Y) restart S2
	unless (id_1=2) and Y2 restart S1
	unless (id_1=1) restart S1
	unless (id_1=2) restart S2
	unless (id_1=0) and E  restart S1
	let
		id = id_1 -> pre id_1;
		--id = 0;
		out = 0;
	tel

  state S1:
        
	let
		id = id_1 -> pre id_1;
		--id = 1;
		out = 1;
	tel
	until true restart Pointa

  state S2:

	let
		id = id_1 -> pre id_1;
		--id = 2;
		out = 2;
	tel
	until true restart Pointa

tel



node test( E : bool ) returns ( Y,Y2 : bool; out:int );
var id_1 :int;
let 
  id_1 = 0 -> pre out;
  
  out, Y, Y2 = chart(E,id_1);
tel
