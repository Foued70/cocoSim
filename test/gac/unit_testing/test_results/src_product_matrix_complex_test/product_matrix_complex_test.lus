-- This file has been generated by CocoSim compiler + verifier

include "complex_arith_int.lus"
include "complex_arith_real.lus"
type complex_int = struct { r: int; i: int};
type complex_real = struct { r: real; i: real};

-- System nodes
node product_matrix_complex_test (In1_1_1 : complex_real; In2_1_1 : complex_real; In2_1_2 : complex_real; In2_1_3 : complex_real; In3_1_1 : complex_real; In3_1_2 : complex_real; In3_1_3 : complex_real; In3_1_4 : complex_real; In3_1_5 : complex_real; In3_1_6 : complex_real; In4_1_1 : complex_int; In4_1_2 : complex_int; In4_1_3 : complex_int; In4_1_4 : complex_int; In4_1_5 : complex_int; In4_1_6 : complex_int; In5_1_1 : complex_int; In5_1_2 : complex_int; In5_1_3 : complex_int; In5_1_4 : complex_int; In5_1_5 : complex_int; In5_1_6 : complex_int; In5_1_7 : complex_int; In5_1_8 : complex_int; In5_1_9 : complex_int; In6_1_1 : complex_real; In6_1_2 : complex_real; In7_1_1 : complex_real; In7_1_2 : complex_real; )
returns (Out1_1_1 : complex_real;
	Out2_2_1 : complex_real; Out2_2_2 : complex_real; Out2_2_3 : complex_real;
	Out3_3_1 : complex_real; Out3_3_2 : complex_real; Out3_3_3 : complex_real; Out3_3_4 : complex_real; Out3_3_5 : complex_real; Out3_3_6 : complex_real;
	Out4_4_1 : complex_int; Out4_4_2 : complex_int; Out4_4_3 : complex_int; Out4_4_4 : complex_int; Out4_4_5 : complex_int; Out4_4_6 : complex_int;
	Out5_5_1 : complex_real) 
var
	Product_1_1 : complex_real;
	Product1_1_1 : complex_real; Product1_1_2 : complex_real; Product1_1_3 : complex_real;
	Product2_1_1 : complex_real; Product2_1_2 : complex_real; Product2_1_3 : complex_real; Product2_1_4 : complex_real; Product2_1_5 : complex_real; Product2_1_6 : complex_real;
	Product3_1_1 : complex_int; Product3_1_2 : complex_int; Product3_1_3 : complex_int; Product3_1_4 : complex_int; Product3_1_5 : complex_int; Product3_1_6 : complex_int;
	Product4_1_1 : complex_real;
let 
	Product_1_1 = In1_1_1;
	Product1_1_1 = In2_1_1;
	Product1_1_2 = In2_1_2;
	Product1_1_3 = In2_1_3;
	Product2_1_1 = In3_1_1;
	Product2_1_2 = In3_1_2;
	Product2_1_3 = In3_1_3;
	Product2_1_4 = In3_1_4;
	Product2_1_5 = In3_1_5;
	Product2_1_6 = In3_1_6;
	Product3_1_1 = complex_sum_int(complex_sum_int( complex_mult_int(In4_1_1, In5_1_1), complex_mult_int(In4_1_2, In5_1_4)), complex_mult_int(In4_1_3, In5_1_7));
	Product3_1_2 = complex_sum_int(complex_sum_int( complex_mult_int(In4_1_1, In5_1_2), complex_mult_int(In4_1_2, In5_1_5)), complex_mult_int(In4_1_3, In5_1_8));
	Product3_1_3 = complex_sum_int(complex_sum_int( complex_mult_int(In4_1_1, In5_1_3), complex_mult_int(In4_1_2, In5_1_6)), complex_mult_int(In4_1_3, In5_1_9));
	Product3_1_4 = complex_sum_int(complex_sum_int( complex_mult_int(In4_1_4, In5_1_1), complex_mult_int(In4_1_5, In5_1_4)), complex_mult_int(In4_1_6, In5_1_7));
	Product3_1_5 = complex_sum_int(complex_sum_int( complex_mult_int(In4_1_4, In5_1_2), complex_mult_int(In4_1_5, In5_1_5)), complex_mult_int(In4_1_6, In5_1_8));
	Product3_1_6 = complex_sum_int(complex_sum_int( complex_mult_int(In4_1_4, In5_1_3), complex_mult_int(In4_1_5, In5_1_6)), complex_mult_int(In4_1_6, In5_1_9));
	Product4_1_1 = complex_sum_real( complex_mult_real(In6_1_1, In7_1_1), complex_mult_real(In6_1_2, In7_1_2));
	Out1_1_1 = Product_1_1;
	Out2_2_1 = Product1_1_1;
	Out2_2_2 = Product1_1_2;
	Out2_2_3 = Product1_1_3;
	Out3_3_1 = Product2_1_1;
	Out3_3_2 = Product2_1_2;
	Out3_3_3 = Product2_1_3;
	Out3_3_4 = Product2_1_4;
	Out3_3_5 = Product2_1_5;
	Out3_3_6 = Product2_1_6;
	Out4_4_1 = Product3_1_1;
	Out4_4_2 = Product3_1_2;
	Out4_4_3 = Product3_1_3;
	Out4_4_4 = Product3_1_4;
	Out4_4_5 = Product3_1_5;
	Out4_4_6 = Product3_1_6;
	Out5_5_1 = Product4_1_1;
	--!MAIN: true;
tel

