-- This file has been generated by CocoSim compiler + verifier

type complex_int = struct { r: int; i: int};
type complex_real = struct { r: real; i: real};

-- System nodes
node detect_change_complex_test (In1_1_1 : complex_real; In2_1_1 : complex_real; In2_1_2 : complex_real; In2_1_3 : complex_real; In2_1_4 : complex_real; In2_1_5 : complex_real; In3_1_1 : complex_int; In3_1_2 : complex_int; In3_1_3 : complex_int; In3_1_4 : complex_int; In3_1_5 : complex_int; In3_1_6 : complex_int; )
returns (Out1_1_1 : bool;
	Out2_2_1 : bool; Out2_2_2 : bool; Out2_2_3 : bool; Out2_2_4 : bool; Out2_2_5 : bool;
	Out3_3_1 : bool; Out3_3_2 : bool; Out3_3_3 : bool; Out3_3_4 : bool; Out3_3_5 : bool; Out3_3_6 : bool) 
var
	DetectChange_1_1 : bool;
	DetectChange1_1_1 : bool; DetectChange1_1_2 : bool; DetectChange1_1_3 : bool; DetectChange1_1_4 : bool; DetectChange1_1_5 : bool;
	DetectChange2_1_1 : bool; DetectChange2_1_2 : bool; DetectChange2_1_3 : bool; DetectChange2_1_4 : bool; DetectChange2_1_5 : bool; DetectChange2_1_6 : bool;
let 
	DetectChange_1_1 = not (In1_1_1.r = (0.0000000000 -> pre (In1_1_1.r))) or not (In1_1_1.i = (0.0000000000 -> pre (In1_1_1.i)));
	DetectChange1_1_1 = not (In2_1_1.r = (2.5000000000 -> pre (In2_1_1.r))) or not (In2_1_1.i = (3.0000000000 -> pre (In2_1_1.i)));
	DetectChange1_1_2 = not (In2_1_2.r = (2.5000000000 -> pre (In2_1_2.r))) or not (In2_1_2.i = (3.0000000000 -> pre (In2_1_2.i)));
	DetectChange1_1_3 = not (In2_1_3.r = (2.5000000000 -> pre (In2_1_3.r))) or not (In2_1_3.i = (3.0000000000 -> pre (In2_1_3.i)));
	DetectChange1_1_4 = not (In2_1_4.r = (2.5000000000 -> pre (In2_1_4.r))) or not (In2_1_4.i = (3.0000000000 -> pre (In2_1_4.i)));
	DetectChange1_1_5 = not (In2_1_5.r = (2.5000000000 -> pre (In2_1_5.r))) or not (In2_1_5.i = (3.0000000000 -> pre (In2_1_5.i)));
	DetectChange2_1_1 = not (In3_1_1.r = (0 -> pre (In3_1_1.r))) or not (In3_1_1.i = (0 -> pre (In3_1_1.i)));
	DetectChange2_1_2 = not (In3_1_2.r = (0 -> pre (In3_1_2.r))) or not (In3_1_2.i = (0 -> pre (In3_1_2.i)));
	DetectChange2_1_3 = not (In3_1_3.r = (0 -> pre (In3_1_3.r))) or not (In3_1_3.i = (0 -> pre (In3_1_3.i)));
	DetectChange2_1_4 = not (In3_1_4.r = (0 -> pre (In3_1_4.r))) or not (In3_1_4.i = (0 -> pre (In3_1_4.i)));
	DetectChange2_1_5 = not (In3_1_5.r = (0 -> pre (In3_1_5.r))) or not (In3_1_5.i = (0 -> pre (In3_1_5.i)));
	DetectChange2_1_6 = not (In3_1_6.r = (0 -> pre (In3_1_6.r))) or not (In3_1_6.i = (0 -> pre (In3_1_6.i)));
	Out1_1_1 = DetectChange_1_1;
	Out2_2_1 = DetectChange1_1_1;
	Out2_2_2 = DetectChange1_1_2;
	Out2_2_3 = DetectChange1_1_3;
	Out2_2_4 = DetectChange1_1_4;
	Out2_2_5 = DetectChange1_1_5;
	Out3_3_1 = DetectChange2_1_1;
	Out3_3_2 = DetectChange2_1_2;
	Out3_3_3 = DetectChange2_1_3;
	Out3_3_4 = DetectChange2_1_4;
	Out3_3_5 = DetectChange2_1_5;
	Out3_3_6 = DetectChange2_1_6;
	--!MAIN: true;
tel

