-- This file has been generated by CocoSim compiler + verifier

include "complex_arith_real.lus"
type complex_real = struct { r: real; i: real};

-- System nodes
node product_matrix_multiple_complex_test (In4_1_1 : complex_real; In4_1_2 : complex_real; In4_1_3 : complex_real; In4_1_4 : complex_real; In4_1_5 : complex_real; In4_1_6 : complex_real; In5_1_1 : complex_real; In5_1_2 : complex_real; In5_1_3 : complex_real; In5_1_4 : complex_real; In5_1_5 : complex_real; In5_1_6 : complex_real; In1_1_1 : complex_real; In1_1_2 : complex_real; In2_1_1 : complex_real; In2_1_2 : complex_real; In2_1_3 : complex_real; In2_1_4 : complex_real; In2_1_5 : complex_real; In2_1_6 : complex_real; In2_1_7 : complex_real; In2_1_8 : complex_real; In3_1_1 : complex_real; In3_1_2 : complex_real; In3_1_3 : complex_real; In3_1_4 : complex_real; In3_1_5 : complex_real; In3_1_6 : complex_real; In3_1_7 : complex_real; In3_1_8 : complex_real; In6_1_1 : complex_real; In6_1_2 : complex_real; In6_1_3 : complex_real; In6_1_4 : complex_real; In6_1_5 : complex_real; In6_1_6 : complex_real; In7_1_1 : complex_real; In7_1_2 : complex_real; In7_1_3 : complex_real; In7_1_4 : complex_real; In7_1_5 : complex_real; In7_1_6 : complex_real; In7_1_7 : complex_real; In7_1_8 : complex_real; In7_1_9 : complex_real; In8_1_1 : complex_real; In8_1_2 : complex_real; In8_1_3 : complex_real; In8_1_4 : complex_real; In8_1_5 : complex_real; In8_1_6 : complex_real; In9_1_1 : complex_real; In9_1_2 : complex_real; )
returns (Out4_1_1 : complex_real; Out4_1_2 : complex_real;
	Out1_2_1 : complex_real; Out1_2_2 : complex_real) 
var
	Product1_1_1 : complex_real; Product1_1_2 : complex_real;
	Product3_1_1 : complex_real; Product3_1_2 : complex_real;
	Product1_tmp_1 : complex_real; Product1_tmp_2 : complex_real; Product1_tmp_3 : complex_real; Product1_tmp_4 : complex_real;
	Product1_tmp_5 : complex_real; Product1_tmp_6 : complex_real; Product1_tmp_7 : complex_real; Product1_tmp_8 : complex_real; Product1_tmp_9 : complex_real; Product1_tmp_10 : complex_real;
	Product1_tmp_11 : complex_real; Product1_tmp_12 : complex_real; Product1_tmp_13 : complex_real; Product1_tmp_14 : complex_real; Product1_tmp_15 : complex_real; Product1_tmp_16 : complex_real;
	Product1_tmp_17 : complex_real; Product1_tmp_18 : complex_real; Product1_tmp_19 : complex_real; Product1_tmp_20 : complex_real;
	Product3_tmp_1 : complex_real; Product3_tmp_2 : complex_real; Product3_tmp_3 : complex_real; Product3_tmp_4 : complex_real;
let 
	Product1_tmp_1 = complex_sum_real(complex_sum_real(complex_sum_real( complex_mult_real(In2_1_1, In3_1_1), complex_mult_real(In2_1_2, In3_1_3)), complex_mult_real(In2_1_3, In3_1_5)), complex_mult_real(In2_1_4, In3_1_7));
	Product1_tmp_2 = complex_sum_real(complex_sum_real(complex_sum_real( complex_mult_real(In2_1_1, In3_1_2), complex_mult_real(In2_1_2, In3_1_4)), complex_mult_real(In2_1_3, In3_1_6)), complex_mult_real(In2_1_4, In3_1_8));
	Product1_tmp_3 = complex_sum_real(complex_sum_real(complex_sum_real( complex_mult_real(In2_1_5, In3_1_1), complex_mult_real(In2_1_6, In3_1_3)), complex_mult_real(In2_1_7, In3_1_5)), complex_mult_real(In2_1_8, In3_1_7));
	Product1_tmp_4 = complex_sum_real(complex_sum_real(complex_sum_real( complex_mult_real(In2_1_5, In3_1_2), complex_mult_real(In2_1_6, In3_1_4)), complex_mult_real(In2_1_7, In3_1_6)), complex_mult_real(In2_1_8, In3_1_8));
	Product1_tmp_5 = complex_sum_real( complex_mult_real(Product1_tmp_1, In6_1_1), complex_mult_real(Product1_tmp_2, In6_1_4));
	Product1_tmp_6 = complex_sum_real( complex_mult_real(Product1_tmp_1, In6_1_2), complex_mult_real(Product1_tmp_2, In6_1_5));
	Product1_tmp_7 = complex_sum_real( complex_mult_real(Product1_tmp_1, In6_1_3), complex_mult_real(Product1_tmp_2, In6_1_6));
	Product1_tmp_8 = complex_sum_real( complex_mult_real(Product1_tmp_3, In6_1_1), complex_mult_real(Product1_tmp_4, In6_1_4));
	Product1_tmp_9 = complex_sum_real( complex_mult_real(Product1_tmp_3, In6_1_2), complex_mult_real(Product1_tmp_4, In6_1_5));
	Product1_tmp_10 = complex_sum_real( complex_mult_real(Product1_tmp_3, In6_1_3), complex_mult_real(Product1_tmp_4, In6_1_6));
	Product1_tmp_11 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_5, In7_1_1), complex_mult_real(Product1_tmp_6, In7_1_4)), complex_mult_real(Product1_tmp_7, In7_1_7));
	Product1_tmp_12 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_5, In7_1_2), complex_mult_real(Product1_tmp_6, In7_1_5)), complex_mult_real(Product1_tmp_7, In7_1_8));
	Product1_tmp_13 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_5, In7_1_3), complex_mult_real(Product1_tmp_6, In7_1_6)), complex_mult_real(Product1_tmp_7, In7_1_9));
	Product1_tmp_14 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_8, In7_1_1), complex_mult_real(Product1_tmp_9, In7_1_4)), complex_mult_real(Product1_tmp_10, In7_1_7));
	Product1_tmp_15 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_8, In7_1_2), complex_mult_real(Product1_tmp_9, In7_1_5)), complex_mult_real(Product1_tmp_10, In7_1_8));
	Product1_tmp_16 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_8, In7_1_3), complex_mult_real(Product1_tmp_9, In7_1_6)), complex_mult_real(Product1_tmp_10, In7_1_9));
	Product1_tmp_17 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_11, In8_1_1), complex_mult_real(Product1_tmp_12, In8_1_3)), complex_mult_real(Product1_tmp_13, In8_1_5));
	Product1_tmp_18 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_11, In8_1_2), complex_mult_real(Product1_tmp_12, In8_1_4)), complex_mult_real(Product1_tmp_13, In8_1_6));
	Product1_tmp_19 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_14, In8_1_1), complex_mult_real(Product1_tmp_15, In8_1_3)), complex_mult_real(Product1_tmp_16, In8_1_5));
	Product1_tmp_20 = complex_sum_real(complex_sum_real( complex_mult_real(Product1_tmp_14, In8_1_2), complex_mult_real(Product1_tmp_15, In8_1_4)), complex_mult_real(Product1_tmp_16, In8_1_6));
	Product1_1_1 = complex_sum_real( complex_mult_real(Product1_tmp_17, In9_1_1), complex_mult_real(Product1_tmp_18, In9_1_2));
	Product1_1_2 = complex_sum_real( complex_mult_real(Product1_tmp_19, In9_1_1), complex_mult_real(Product1_tmp_20, In9_1_2));
	Product3_tmp_1 = complex_sum_real(complex_sum_real( complex_mult_real(In4_1_1, In5_1_1), complex_mult_real(In4_1_2, In5_1_3)), complex_mult_real(In4_1_3, In5_1_5));
	Product3_tmp_2 = complex_sum_real(complex_sum_real( complex_mult_real(In4_1_1, In5_1_2), complex_mult_real(In4_1_2, In5_1_4)), complex_mult_real(In4_1_3, In5_1_6));
	Product3_tmp_3 = complex_sum_real(complex_sum_real( complex_mult_real(In4_1_4, In5_1_1), complex_mult_real(In4_1_5, In5_1_3)), complex_mult_real(In4_1_6, In5_1_5));
	Product3_tmp_4 = complex_sum_real(complex_sum_real( complex_mult_real(In4_1_4, In5_1_2), complex_mult_real(In4_1_5, In5_1_4)), complex_mult_real(In4_1_6, In5_1_6));
	Product3_1_1 = complex_sum_real( complex_mult_real(Product3_tmp_1, In1_1_1), complex_mult_real(Product3_tmp_2, In1_1_2));
	Product3_1_2 = complex_sum_real( complex_mult_real(Product3_tmp_3, In1_1_1), complex_mult_real(Product3_tmp_4, In1_1_2));
	Out4_1_1 = Product3_1_1;
	Out4_1_2 = Product3_1_2;
	Out1_2_1 = Product1_1_1;
	Out1_2_2 = Product1_1_2;
	--!MAIN: true;
tel

